<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/Aggregator/Model/FeedHTMLQuickForm.php
*/
abstract class Plugg_Aggregator_Model_Base_FeedHTMLQuickForm extends Sabai_Model_EntityHTMLQuickForm
{
    public function onInit(array $params)
    {
        $this->addElement('text', 'site_url', $this->_model->_('Site url'), array('size' => 80, 'maxlength' => 255));
        $this->addRule('site_url', $this->_model->_('Invalid URI'), 'uri', null, 'client');
        $this->addElement('text', 'title', $this->_model->_('Title'), array('size' => 80, 'maxlength' => 255));
        $this->addElement('textarea', 'description', $this->_model->_('Description'), array('rows' => 5, 'cols' => 60));
        $this->addElement('text', 'language', $this->_model->_('Language'), array('size' => 20, 'maxlength' => 255));
        $this->addElement('text', 'feed_url', $this->_model->_('Feed url'), array('size' => 80, 'maxlength' => 255));
        $this->addRule('feed_url', $this->_model->_('Invalid URI'), 'uri', null, 'client');
        $this->addElement('text', 'favicon_url', $this->_model->_('Favicon url'), array('size' => 80, 'maxlength' => 255));
        $this->addRule('favicon_url', $this->_model->_('Invalid URI'), 'uri', null, 'client');
        $this->addElement('altselect', 'favicon_hide', $this->_model->_('Favicon hide'), array(
            1 => $this->_model->_('Yes'),
            0 => $this->_model->_('No'),
        ))->setDelimiter('&nbsp;');
        $this->addElement('altselect', 'author_pref', $this->_model->_('Author pref'), array());
        $this->addElement('altselect', 'allow_image', $this->_model->_('Allow image'), array(
            1 => $this->_model->_('Yes'),
            0 => $this->_model->_('No'),
        ))->setDelimiter('&nbsp;');
        $this->addElement('altselect', 'allow_external_resources', $this->_model->_('Allow external resources'), array(
            1 => $this->_model->_('Yes'),
            0 => $this->_model->_('No'),
        ))->setDelimiter('&nbsp;');
        $this->addElement('text', 'host', $this->_model->_('Host'), array('size' => 80, 'maxlength' => 255));
        $this->addElement('text', 'userid', $this->_model->_('User ID'), array('size' => 30, 'maxlength' => 255));
        $this->_onInit($params);
    }

    public function onEntity(Sabai_Model_Entity $entity)
    {
        $defaults = array();
        foreach (array('site_url', 'title', 'description', 'language', 'feed_url', 'favicon_url', 'favicon_hide', 'author_pref', 'allow_image', 'allow_external_resources', 'host') as $key) {
            if ($this->elementExists($key) || $this->isInGroup($key)) {
                $defaults[$key] = $entity->getVar($key);
            }
        }
        if ($this->elementExists('userid')) {
            $defaults['userid'] = $entity->getVar('userid');
        }
        if (!empty($defaults)) $this->setDefaults($defaults);
        $this->_onEntity($entity);
    }

    public function onFillEntity(Sabai_Model_Entity $entity)
    {
        $vars = array();
        foreach (array('site_url' => 'site_url', 'title' => 'title', 'description' => 'description', 'language' => 'language', 'feed_url' => 'feed_url', 'favicon_url' => 'favicon_url', 'favicon_hide' => 'favicon_hide', 'author_pref' => 'author_pref', 'allow_image' => 'allow_image', 'allow_external_resources' => 'allow_external_resources', 'host' => 'host', 'userid' => 'userid') as $var_name => $form_name) {
            if ($this->elementExists($form_name) || $this->isInGroup($form_name)) {
                if ($this->getElementType($form_name) == 'static') continue;

                $value = $this->getSubmitValue($form_name);
                $vars[$var_name] = is_array($value) ? array_shift($value) : $value;
            }
        }
        $entity->setVars($vars);
        $this->_onFillEntity($entity);
    }

    abstract protected function _onInit(array $params);
    abstract protected function _onEntity(Sabai_Model_Entity $entity);
    abstract protected function _onFillEntity(Sabai_Model_Entity $entity);
}