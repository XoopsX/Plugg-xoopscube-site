<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/Filter/Model/Filter.php
*/
abstract class Plugg_Filter_Model_Base_Filter extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Filter', $model);
        $this->_vars = array('filter_id' => 0, 'filter_created' => 0, 'filter_updated' => 0, 'filter_name' => null, 'filter_plugin' => null, 'filter_title' => null, 'filter_order' => 0, 'filter_active' => 0, 'filter_default' => 0);
    }

    public function getId()
    {
        return $this->getVar('id');
    }

    public function setId($value)
    {
        $this->setVar('id', $value);
    }

    public function getTimeCreated()
    {
        return $this->getVar('created');
    }

    public function getTimeUpdated()
    {
        return $this->getVar('updated');
    }

    public function getLabel()
    {
        return $this->getVar('title');
    }

    protected function _getVar($name)
    {
        return $this->_vars['filter_' . $name];
    }

    protected function _setVar($name, $value)
    {
        switch ($name) {
        case 'id':
            $this->_vars['filter_id'] = $value;
            break;
        case 'name':
            $this->_vars['filter_name'] = trim($value);
            break;
        case 'plugin':
            $this->_vars['filter_plugin'] = trim($value);
            break;
        case 'title':
            $this->_vars['filter_title'] = trim($value);
            break;
        case 'order':
            $this->_vars['filter_order'] = $value;
            break;
        case 'active':
            $this->_vars['filter_active'] = $value;
            break;
        case 'default':
            $this->_vars['filter_default'] = $value;
            break;
        default:
            trigger_error(sprintf('Error trying to set value for variable %s. This variable is either read-only or does not exist for this entity', $name), E_USER_WARNING);
            return false;
        }
        return true;
    }

    protected function _get($name, $sort, $order)
    {
        switch ($name) {
        case 'name':
            return $this->getVar('name');
        case 'plugin':
            return $this->getVar('plugin');
        case 'title':
            return $this->getVar('title');
        case 'order':
            return $this->getVar('order');
        case 'active':
            return $this->getVar('active');
        case 'default':
            return $this->getVar('default');
        }
    }

    public function __set($name, $value)
    {
        switch ($name) {
        case 'name':
            $this->setVar('name', $value);
            break;
        case 'plugin':
            $this->setVar('plugin', $value);
            break;
        case 'title':
            $this->setVar('title', $value);
            break;
        case 'order':
            $this->setVar('order', $value);
            break;
        case 'active':
            $this->setVar('active', $value);
            break;
        case 'default':
            $this->setVar('default', $value);
            break;
        }
    }

    public function initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_Filter_Model_Base_FilterRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Filter', $model);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_Filter_Model_Base_FiltersByRowset($rs, $this->_model->create('Filter'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_Filter_Model_Base_Filters($this->_model, $entities);
    }
}

class Plugg_Filter_Model_Base_FiltersByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Sabai_Model_Entity $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Filters', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_Filter_Model_Base_Filters extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Filters', $entities);
    }
}