<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/OpenID/Model/Nonce.php
*/
abstract class Plugg_OpenID_Model_Base_Nonce extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Nonce', $model);
        $this->_vars = array('nonce_id' => 0, 'nonce_created' => 0, 'nonce_updated' => 0, 'nonce_server_url' => null, 'nonce_timestamp' => 0, 'nonce_salt' => null);
    }

    public function getId()
    {
        return $this->getVar('id');
    }

    public function setId($value)
    {
        $this->setVar('id', $value);
    }

    public function getTimeCreated()
    {
        return $this->getVar('created');
    }

    public function getTimeUpdated()
    {
        return $this->getVar('updated');
    }

    protected function _getVar($name)
    {
        return $this->_vars['nonce_' . $name];
    }

    protected function _setVar($name, $value)
    {
        switch ($name) {
        case 'id':
            $this->_vars['nonce_id'] = $value;
            break;
        case 'server_url':
            $this->_vars['nonce_server_url'] = trim($value);
            break;
        case 'timestamp':
            $this->_vars['nonce_timestamp'] = $value;
            break;
        case 'salt':
            $this->_vars['nonce_salt'] = trim($value);
            break;
        default:
            trigger_error(sprintf('Error trying to set value for variable %s. This variable is either read-only or does not exist for this entity', $name), E_USER_WARNING);
            return false;
        }
        return true;
    }

    protected function _get($name, $sort, $order)
    {
        switch ($name) {
        case 'server_url':
            return $this->getVar('server_url');
        case 'timestamp':
            return $this->getVar('timestamp');
        case 'salt':
            return $this->getVar('salt');
        }
    }

    public function __set($name, $value)
    {
        switch ($name) {
        case 'server_url':
            $this->setVar('server_url', $value);
            break;
        case 'timestamp':
            $this->setVar('timestamp', $value);
            break;
        case 'salt':
            $this->setVar('salt', $value);
            break;
        }
    }

    public function initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_OpenID_Model_Base_NonceRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Nonce', $model);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_OpenID_Model_Base_NoncesByRowset($rs, $this->_model->create('Nonce'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_OpenID_Model_Base_Nonces($this->_model, $entities);
    }
}

class Plugg_OpenID_Model_Base_NoncesByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Sabai_Model_Entity $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Nonces', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_OpenID_Model_Base_Nonces extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Nonces', $entities);
    }
}