<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/Project/Model/Category.php
*/
abstract class Plugg_Project_Model_Base_Category extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Category', $model);
        $this->_vars = array('category_id' => 0, 'category_created' => 0, 'category_updated' => 0, 'category_name' => null, 'category_description' => null, 'category_order' => 0);
    }

    public function getId()
    {
        return $this->getVar('id');
    }

    public function setId($value)
    {
        $this->setVar('id', $value);
    }

    public function getTimeCreated()
    {
        return $this->getVar('created');
    }

    public function getTimeUpdated()
    {
        return $this->getVar('updated');
    }

    public function getLabel()
    {
        return $this->getVar('name');
    }

    public function linkProject(Sabai_Model_Entity $entity)
    {
        if ($entity->getName() == 'Project') return $this->linkProjectById($entity->getId());

        return false;
    }

    public function linkProjectById($id)
    {
        return $this->_linkEntityById('Project2category', 'project_id', $id);
    }

    public function unlinkProject(Sabai_Model_entity $entity)
    {
        if ($entity->getName() != 'Project') return 0;

        return $this->unlinkProjectById($entity->getId());
    }

    public function unlinkProjectById($id)
    {
        return $this->_unlinkEntityById('Project2category', 'project2category_category_id', 'project2category_project_id', $id);
    }

    public function unlinkProjects()
    {
        return $this->_unlinkEntities('Project2category');
    }

    protected function _fetchProjects($limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchEntities('Project', $limit, $offset, $sort, $order);
    }

    public function paginateProjects($perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateEntities('Project', $perpage, $sort, $order);
    }

    public function countProjects()
    {
        return $this->_countEntities('Project');
    }

    protected function _getVar($name)
    {
        return $this->_vars['category_' . $name];
    }

    protected function _setVar($name, $value)
    {
        switch ($name) {
        case 'id':
            $this->_vars['category_id'] = $value;
            break;
        case 'name':
            $this->_vars['category_name'] = trim($value);
            break;
        case 'description':
            $this->_vars['category_description'] = trim($value);
            break;
        case 'order':
            $this->_vars['category_order'] = $value;
            break;
        default:
            trigger_error(sprintf('Error trying to set value for variable %s. This variable is either read-only or does not exist for this entity', $name), E_USER_WARNING);
            return false;
        }
        return true;
    }

    protected function _get($name, $sort, $order)
    {
        switch ($name) {
        case 'name':
            return $this->getVar('name');
        case 'description':
            return $this->getVar('description');
        case 'order':
            return $this->getVar('order');
        case 'Projects':
            return $this->_fetchProjects(0, 0, $sort, $order);
        }
    }

    public function __set($name, $value)
    {
        switch ($name) {
        case 'name':
            $this->setVar('name', $value);
            break;
        case 'description':
            $this->setVar('description', $value);
            break;
        case 'order':
            $this->setVar('order', $value);
            break;
        case 'Projects':
            $this->unlinkProjects();
            foreach (array_keys($value) as $i) {
                if (is_object($value[$i])) {
                    $this->linkProject($value[$i]);
                } else {
                    $this->linkProjectById($value[$i]);
                }
            }
            break;
        }
    }

    public function initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_Project_Model_Base_CategoryRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Category', $model);
    }

    public function fetchByProject($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByAssoc('category', 'Project2category', 'project2category_project_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByProject($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Project', $id, $perpage, $sort, $order);
    }

    public function countByProject($id)
    {
        return $this->_countByAssoc('category_id', 'Project2category', 'project2category_project_id', $id);
    }

    public function fetchByProjectAndCriteria($id, Sabai_Model_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByAssocAndCriteria('category', 'Project2category', 'project2category_project_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function countByProjectAndCriteria($id, Sabai_Model_Criteria $criteria)
    {
        return $this->_countByAssocAndCriteria('category_id', 'Project2category', 'project2category_project_id', $id, $criteria);
    }

    public function paginateByProjectAndCriteria($id, Sabai_Model_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Project', $id, $criteria, $perpage, $sort, $order);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_Project_Model_Base_CategoriesByRowset($rs, $this->_model->create('Category'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_Project_Model_Base_Categories($this->_model, $entities);
    }
}

class Plugg_Project_Model_Base_CategoriesByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Sabai_Model_Entity $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Categories', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_Project_Model_Base_Categories extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Categories', $entities);
    }
}