<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/Project/Model/CategoryGateway.php
*/
abstract class Plugg_Project_Model_Base_CategoryGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'category';
    }

    public function getFields()
    {
        return array('category_id' => Sabai_Model::KEY_TYPE_INT, 'category_created' => Sabai_Model::KEY_TYPE_INT, 'category_updated' => Sabai_Model::KEY_TYPE_INT, 'category_name' => Sabai_Model::KEY_TYPE_VARCHAR, 'category_description' => Sabai_Model::KEY_TYPE_TEXT, 'category_order' => Sabai_Model::KEY_TYPE_INT);
    }

    protected function _getSelectByIdQuery($id, array $fields)
    {
        $fields = empty($fields) ? '*' : implode(', ', $fields);
        return sprintf('SELECT %s FROM %scategory WHERE category_id = %d', $fields, $this->_db->getResourcePrefix(), $id);
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, array $fields)
    {
        $fields = empty($fields) ? '*' : implode(', ', $fields);
        return sprintf('SELECT %1$s FROM %2$scategory WHERE %3$s', $fields, $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getInsertQuery(array $values)
    {
        $values['category_created'] = time();
        $values['category_updated'] = 0;
        return sprintf("INSERT INTO %scategory(category_created, category_updated, category_name, category_description, category_order) VALUES(%d, %d, %s, %s, %d)", $this->_db->getResourcePrefix(), $values['category_created'], $values['category_updated'], $this->_db->escapeString($values['category_name']), $this->_db->escapeString($values['category_description']), $values['category_order']);
    }

    protected function _getUpdateQuery($id, array $values)
    {
        $last_update = $values['category_updated'];
        $values['category_updated'] = time();
        return sprintf("UPDATE %scategory SET category_updated = %d, category_name = %s, category_description = %s, category_order = %d WHERE category_id = %d AND category_updated = %d", $this->_db->getResourcePrefix(), $values['category_updated'], $this->_db->escapeString($values['category_name']), $this->_db->escapeString($values['category_description']), $values['category_order'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$scategory WHERE category_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, array $sets)
    {
        $sets['category_updated'] = 'category_updated=' . time();
        return sprintf('UPDATE %scategory SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$scategory WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$scategory WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _beforeDeleteTrigger1($id, array $old)
    {
        return $this->_db->exec(sprintf('DELETE FROM %1$sproject2category WHERE %1$sproject2category.project2category_category_id = %2$d', $this->_db->getResourcePrefix(), $id), false);
    }

    protected function _beforeDeleteTrigger($id, array $old)
    {
        if (!$this->_beforeDeleteTrigger1($id, $old)) return false;
        return true;
    }
}