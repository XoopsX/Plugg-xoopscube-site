<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/Project/Model/Project2categoryGateway.php
*/
abstract class Plugg_Project_Model_Base_Project2categoryGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'project2category';
    }

    public function getFields()
    {
        return array('project2category_id' => Sabai_Model::KEY_TYPE_INT, 'project2category_created' => Sabai_Model::KEY_TYPE_INT, 'project2category_updated' => Sabai_Model::KEY_TYPE_INT, 'project2category_project_id' => Sabai_Model::KEY_TYPE_INT_NULL, 'project2category_category_id' => Sabai_Model::KEY_TYPE_INT_NULL);
    }

    public function getSortFields()
    {
        return array('project_id' => Sabai_Model::KEY_TYPE_INT, 'project_created' => Sabai_Model::KEY_TYPE_INT, 'project_updated' => Sabai_Model::KEY_TYPE_INT, 'project_name' => Sabai_Model::KEY_TYPE_VARCHAR, 'project_summary' => Sabai_Model::KEY_TYPE_TEXT, 'project_summary_html' => Sabai_Model::KEY_TYPE_TEXT, 'project_summary_filter_id' => Sabai_Model::KEY_TYPE_INT, 'project_data' => Sabai_Model::KEY_TYPE_TEXT, 'project_release_latest' => Sabai_Model::KEY_TYPE_INT, 'project_lastupdate' => Sabai_Model::KEY_TYPE_INT, 'project_image_featured' => Sabai_Model::KEY_TYPE_INT, 'project_status' => Sabai_Model::KEY_TYPE_INT, 'project_hidden' => Sabai_Model::KEY_TYPE_INT, 'project_allow_comments' => Sabai_Model::KEY_TYPE_INT, 'project_allow_links' => Sabai_Model::KEY_TYPE_INT, 'project_allow_images' => Sabai_Model::KEY_TYPE_INT, 'project_allow_releases' => Sabai_Model::KEY_TYPE_INT, 'project_comment_rating' => Sabai_Model::KEY_TYPE_FLOAT, 'project_views' => Sabai_Model::KEY_TYPE_INT, 'project_userid' => Sabai_Model::KEY_TYPE_VARCHAR, 'project_link_count' => Sabai_Model::KEY_TYPE_INT, 'project_link_last' => Sabai_Model::KEY_TYPE_INT, 'project_link_lasttime' => Sabai_Model::KEY_TYPE_INT, 'project_release_count' => Sabai_Model::KEY_TYPE_INT, 'project_release_last' => Sabai_Model::KEY_TYPE_INT, 'project_release_lasttime' => Sabai_Model::KEY_TYPE_INT, 'project_comment_count' => Sabai_Model::KEY_TYPE_INT, 'project_comment_last' => Sabai_Model::KEY_TYPE_INT, 'project_comment_lasttime' => Sabai_Model::KEY_TYPE_INT, 'project_developer_count' => Sabai_Model::KEY_TYPE_INT, 'project_developer_last' => Sabai_Model::KEY_TYPE_INT, 'project_developer_lasttime' => Sabai_Model::KEY_TYPE_INT, 'project_abuse_count' => Sabai_Model::KEY_TYPE_INT, 'project_abuse_last' => Sabai_Model::KEY_TYPE_INT, 'project_abuse_lasttime' => Sabai_Model::KEY_TYPE_INT, 'project_image_count' => Sabai_Model::KEY_TYPE_INT, 'project_image_last' => Sabai_Model::KEY_TYPE_INT, 'project_image_lasttime' => Sabai_Model::KEY_TYPE_INT, 'category_id' => Sabai_Model::KEY_TYPE_INT, 'category_created' => Sabai_Model::KEY_TYPE_INT, 'category_updated' => Sabai_Model::KEY_TYPE_INT, 'category_name' => Sabai_Model::KEY_TYPE_VARCHAR, 'category_description' => Sabai_Model::KEY_TYPE_TEXT, 'category_order' => Sabai_Model::KEY_TYPE_INT);
    }

    protected function _getSelectByIdQuery($id, array $fields)
    {
        $fields = empty($fields) ? 'project2category.*, project.*, category.*' : implode(', ', $fields);
        return sprintf('SELECT %2$s FROM %1$sproject2category project2category INNER JOIN %1$sproject project ON project.project_id = project2category.project2category_project_id INNER JOIN %1$scategory category ON category.category_id = project2category.project2category_category_id WHERE project2category.project2category_id = %3$d', $this->_db->getResourcePrefix(), $fields, $id);
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, array $fields)
    {
        $fields = empty($fields) ? 'project2category.*, project.*, category.*' : implode(', ', $fields);
        return sprintf('SELECT %2$s FROM %1$sproject2category project2category INNER JOIN %1$sproject project ON project.project_id = project2category.project2category_project_id INNER JOIN %1$scategory category ON category.category_id = project2category.project2category_category_id WHERE %3$s', $this->_db->getResourcePrefix(), $fields, $criteriaStr);
    }

    protected function _getInsertQuery(array $values)
    {
        $values['project2category_created'] = time();
        $values['project2category_updated'] = 0;
        $values['project2category_project_id'] = !empty($values['project2category_project_id']) ? intval($values['project2category_project_id']) : 'NULL';
        $values['project2category_category_id'] = !empty($values['project2category_category_id']) ? intval($values['project2category_category_id']) : 'NULL';
        return sprintf("INSERT INTO %sproject2category(project2category_created, project2category_updated, project2category_project_id, project2category_category_id) VALUES(%d, %d, %s, %s)", $this->_db->getResourcePrefix(), $values['project2category_created'], $values['project2category_updated'], $values['project2category_project_id'], $values['project2category_category_id']);
    }

    protected function _getUpdateQuery($id, array $values)
    {
        $values['project2category_project_id'] = !empty($values['project2category_project_id']) ? intval($values['project2category_project_id']) : 'NULL';
        $values['project2category_category_id'] = !empty($values['project2category_category_id']) ? intval($values['project2category_category_id']) : 'NULL';
        $last_update = $values['project2category_updated'];
        $values['project2category_updated'] = time();
        return sprintf("UPDATE %sproject2category SET project2category_updated = %d, project2category_project_id = %s, project2category_category_id = %s WHERE project2category_id = %d AND project2category_updated = %d", $this->_db->getResourcePrefix(), $values['project2category_updated'], $values['project2category_project_id'], $values['project2category_category_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sproject2category WHERE project2category_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, array $sets)
    {
        $sets['project2category_updated'] = 'project2category_updated=' . time();
        return sprintf('UPDATE %sproject2category SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$sproject2category WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sproject2category project2category INNER JOIN %1$sproject project ON project.project_id = project2category.project2category_project_id INNER JOIN %1$scategory category ON category.category_id = project2category.project2category_category_id WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _afterInsertTrigger1($id, array $new)
    {
    }

    protected function _afterDeleteTrigger1($id, array $old)
    {
    }

    protected function _afterUpdateTrigger1($id, array $new, array $old)
    {
    }

    protected function _afterInsertTrigger($id, array $new)
    {
        $this->_afterInsertTrigger1($id, $new);
    }

    protected function _afterUpdateTrigger($id, array $new, array $old)
    {
        $this->_afterUpdateTrigger1($id, $new, $old);
    }

    protected function _afterDeleteTrigger($id, array $old)
    {
        $this->_afterDeleteTrigger1($id, $old);
    }
}