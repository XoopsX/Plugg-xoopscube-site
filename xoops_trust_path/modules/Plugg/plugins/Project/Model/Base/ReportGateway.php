<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/Project/Model/ReportGateway.php
*/
abstract class Plugg_Project_Model_Base_ReportGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'report';
    }

    public function getFields()
    {
        return array('report_id' => Sabai_Model::KEY_TYPE_INT, 'report_created' => Sabai_Model::KEY_TYPE_INT, 'report_updated' => Sabai_Model::KEY_TYPE_INT, 'report_data' => Sabai_Model::KEY_TYPE_TEXT, 'report_ip' => Sabai_Model::KEY_TYPE_CHAR, 'report_type' => Sabai_Model::KEY_TYPE_INT, 'report_comment' => Sabai_Model::KEY_TYPE_TEXT, 'report_comment_html' => Sabai_Model::KEY_TYPE_TEXT, 'report_comment_filter_id' => Sabai_Model::KEY_TYPE_INT, 'report_release_id' => Sabai_Model::KEY_TYPE_INT_NULL, 'report_userid' => Sabai_Model::KEY_TYPE_VARCHAR);
    }

    protected function _getSelectByIdQuery($id, array $fields)
    {
        $fields = empty($fields) ? '*' : implode(', ', $fields);
        return sprintf('SELECT %s FROM %sreport WHERE report_id = %d', $fields, $this->_db->getResourcePrefix(), $id);
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, array $fields)
    {
        $fields = empty($fields) ? '*' : implode(', ', $fields);
        return sprintf('SELECT %1$s FROM %2$sreport WHERE %3$s', $fields, $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getInsertQuery(array $values)
    {
        $values['report_created'] = time();
        $values['report_updated'] = 0;
        $values['report_release_id'] = !empty($values['report_release_id']) ? intval($values['report_release_id']) : 'NULL';
        return sprintf("INSERT INTO %sreport(report_created, report_updated, report_data, report_ip, report_type, report_comment, report_comment_html, report_comment_filter_id, report_release_id, report_userid) VALUES(%d, %d, %s, %s, %d, %s, %s, %d, %s, %s)", $this->_db->getResourcePrefix(), $values['report_created'], $values['report_updated'], $this->_db->escapeString($values['report_data']), $this->_db->escapeString($values['report_ip']), $values['report_type'], $this->_db->escapeString($values['report_comment']), $this->_db->escapeString($values['report_comment_html']), $values['report_comment_filter_id'], $values['report_release_id'], $this->_db->escapeString($values['report_userid']));
    }

    protected function _getUpdateQuery($id, array $values)
    {
        $values['report_release_id'] = !empty($values['report_release_id']) ? intval($values['report_release_id']) : 'NULL';
        $last_update = $values['report_updated'];
        $values['report_updated'] = time();
        return sprintf("UPDATE %sreport SET report_updated = %d, report_data = %s, report_ip = %s, report_type = %d, report_comment = %s, report_comment_html = %s, report_comment_filter_id = %d, report_release_id = %s, report_userid = %s WHERE report_id = %d AND report_updated = %d", $this->_db->getResourcePrefix(), $values['report_updated'], $this->_db->escapeString($values['report_data']), $this->_db->escapeString($values['report_ip']), $values['report_type'], $this->_db->escapeString($values['report_comment']), $this->_db->escapeString($values['report_comment_html']), $values['report_comment_filter_id'], $values['report_release_id'], $this->_db->escapeString($values['report_userid']), $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sreport WHERE report_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, array $sets)
    {
        $sets['report_updated'] = 'report_updated=' . time();
        return sprintf('UPDATE %sreport SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$sreport WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sreport WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _afterInsertTrigger1($id, array $new)
    {
        if (!empty($new['report_release_id'])) {
            $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count + 1, release_report_last = %d, release_report_lasttime = %d WHERE release_id = %d', $this->_db->getResourcePrefix(), $id, $new['report_created'], $new['report_release_id']));
        }
    }

    protected function _afterDeleteTrigger1($id, array $old)
    {
        if (!empty($old['report_release_id'])) {
            $sql = sprintf('SELECT report_id, report_created FROM %sreport WHERE report_release_id = %d ORDER BY report_created DESC', $this->_db->getResourcePrefix(), $old['report_release_id']);
            if (($rs = $this->_db->query($sql, 1, 0)) && ($rs->rowCount() > 0)) {
                $row = $rs->fetchAssoc();
                $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count - 1, release_report_last = %d, release_report_lasttime = %d WHERE release_id = %d', $this->_db->getResourcePrefix(), $row['report_id'], $row['report_created'], $old['report_release_id']));
            } else {
                $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count - 1, release_report_last = 0, release_report_lasttime = release_created WHERE release_id = %d', $this->_db->getResourcePrefix(), $old['report_release_id']));
            }
        }
    }

    protected function _afterUpdateTrigger1($id, array $new, array $old)
    {
        if (empty($old['report_release_id']) && !empty($new['report_release_id'])) {
            $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count + 1, release_report_last = %d, release_report_lasttime = %d WHERE release_id = %d', $this->_db->getResourcePrefix(), $id, $new['report_created'], $new['report_release_id']));
        } elseif (!empty($old['report_release_id']) && empty($new['report_release_id'])) {
            $sql = sprintf('SELECT report_id, report_created FROM %sreport WHERE report_release_id = %d ORDER BY report_created DESC', $this->_db->getResourcePrefix(), $old['report_release_id']);
            if (($rs = $this->_db->query($sql, 1, 0)) && ($rs->rowCount() > 0)) {
                $row = $rs->fetchAssoc();
                $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count - 1, release_report_last = %d, release_report_lasttime = %d WHERE release_id = %d', $this->_db->getResourcePrefix(), $row['report_id'], $row['report_created'], $old['report_release_id']));
            } else {
                $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count - 1, release_report_last = 0, release_report_lasttime = release_created WHERE release_id = %d', $this->_db->getResourcePrefix(), $old['report_release_id']));
            }
        } elseif ($old['report_release_id'] != $new['report_release_id']) {
            $sql = sprintf('SELECT report_id, report_created FROM %sreport WHERE report_release_id = %d ORDER BY report_created DESC', $this->_db->getResourcePrefix(), $old['report_release_id']);
            if (($rs = $this->_db->query($sql, 1, 0)) && ($rs->rowCount() > 0)) {
                $row = $rs->fetchAssoc();
                $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count - 1, release_report_last = %d, release_report_lasttime = %d WHERE release_id = %d', $this->_db->getResourcePrefix(), $row['report_id'], $row['report_created'], $old['report_release_id']));
            } else {
                $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count - 1, release_report_last = 0, release_report_lasttime = release_created WHERE release_id = %d', $this->_db->getResourcePrefix(), $old['report_release_id']));
            }
            $this->_db->exec(sprintf('UPDATE %srelease SET release_report_count = release_report_count + 1, release_report_last = %d, release_report_lasttime = %d WHERE release_id = %d', $this->_db->getResourcePrefix(), $id, $new['report_created'], $new['report_release_id']));
        }
    }

    protected function _afterInsertTrigger($id, array $new)
    {
        $this->_afterInsertTrigger1($id, $new);
    }

    protected function _afterUpdateTrigger($id, array $new, array $old)
    {
        $this->_afterUpdateTrigger1($id, $new, $old);
    }

    protected function _afterDeleteTrigger($id, array $old)
    {
        $this->_afterDeleteTrigger1($id, $old);
    }
}