<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/User/Model/PanelGateway.php
*/
abstract class Plugg_User_Model_Base_PanelGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'panel';
    }

    public function getFields()
    {
        return array('panel_id' => Sabai_Model::KEY_TYPE_INT, 'panel_created' => Sabai_Model::KEY_TYPE_INT, 'panel_updated' => Sabai_Model::KEY_TYPE_INT, 'panel_title' => Sabai_Model::KEY_TYPE_VARCHAR, 'panel_order' => Sabai_Model::KEY_TYPE_INT, 'panel_active' => Sabai_Model::KEY_TYPE_INT, 'panel_private' => Sabai_Model::KEY_TYPE_INT, 'panel_default' => Sabai_Model::KEY_TYPE_INT);
    }

    protected function _getSelectByIdQuery($id, array $fields)
    {
        $fields = empty($fields) ? '*' : implode(', ', $fields);
        return sprintf('SELECT %s FROM %spanel WHERE panel_id = %d', $fields, $this->_db->getResourcePrefix(), $id);
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, array $fields)
    {
        $fields = empty($fields) ? '*' : implode(', ', $fields);
        return sprintf('SELECT %1$s FROM %2$spanel WHERE %3$s', $fields, $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getInsertQuery(array $values)
    {
        $values['panel_created'] = time();
        $values['panel_updated'] = 0;
        return sprintf("INSERT INTO %spanel(panel_created, panel_updated, panel_title, panel_order, panel_active, panel_private, panel_default) VALUES(%d, %d, %s, %d, %d, %d, %d)", $this->_db->getResourcePrefix(), $values['panel_created'], $values['panel_updated'], $this->_db->escapeString($values['panel_title']), $values['panel_order'], $values['panel_active'], $values['panel_private'], $values['panel_default']);
    }

    protected function _getUpdateQuery($id, array $values)
    {
        $last_update = $values['panel_updated'];
        $values['panel_updated'] = time();
        return sprintf("UPDATE %spanel SET panel_updated = %d, panel_title = %s, panel_order = %d, panel_active = %d, panel_private = %d, panel_default = %d WHERE panel_id = %d AND panel_updated = %d", $this->_db->getResourcePrefix(), $values['panel_updated'], $this->_db->escapeString($values['panel_title']), $values['panel_order'], $values['panel_active'], $values['panel_private'], $values['panel_default'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$spanel WHERE panel_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, array $sets)
    {
        $sets['panel_updated'] = 'panel_updated=' . time();
        return sprintf('UPDATE %spanel SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$spanel WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$spanel WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _beforeDeleteTrigger1($id, array $old)
    {
        return $this->_db->exec(sprintf('DELETE FROM %1$spanelwidget WHERE %1$spanelwidget.panelwidget_panel_id = %2$d', $this->_db->getResourcePrefix(), $id), false);
    }

    protected function _beforeDeleteTrigger($id, array $old)
    {
        if (!$this->_beforeDeleteTrigger1($id, $old)) return false;
        return true;
    }
}